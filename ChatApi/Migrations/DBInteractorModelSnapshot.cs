// <auto-generated />
using System;
using ChatApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChatApi.Migrations
{
    [DbContext(typeof(DBInteractor))]
    partial class DBInteractorModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("ChatApi.Models.Chat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("FriendId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastMessage")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastMessageAt")
                        .HasColumnType("TEXT");

                    b.Property<short>("LastMessageBy")
                        .HasColumnType("INTEGER");

                    b.Property<short>("LastMessageType")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Chat");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FriendId = 2L,
                            LastMessage = "hello",
                            LastMessageAt = new DateTime(2020, 8, 7, 3, 18, 3, 223, DateTimeKind.Local).AddTicks(7305),
                            LastMessageBy = (short)1,
                            LastMessageType = (short)1,
                            OwnerId = 1L
                        });
                });

            modelBuilder.Entity("ChatApi.Models.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SenderId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<short>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("imagePath")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Message");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Body = "hello",
                            ChatId = 1L,
                            SenderId = 1L,
                            TimeStamp = new DateTime(2020, 8, 7, 3, 18, 3, 222, DateTimeKind.Local).AddTicks(5833),
                            Type = (short)1
                        });
                });

            modelBuilder.Entity("ChatApi.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "jdoe123@gmail.com",
                            FirstName = "John",
                            Image = "https://randomuser.me/api/portraits/men/72.jpg",
                            LastName = "Doe",
                            Password = "1234",
                            Phone = "+94711526501"
                        },
                        new
                        {
                            Id = 2L,
                            Email = "janed123@gmail.com",
                            FirstName = "Jane",
                            Image = "https://randomuser.me/api/portraits/women/72.jpg",
                            LastName = "Doe",
                            Password = "1234",
                            Phone = "+94711526501"
                        },
                        new
                        {
                            Id = 3L,
                            Email = "alphabet@gmail.com",
                            FirstName = "abc",
                            Image = "https://randomuser.me/api/portraits/men/52.jpg",
                            LastName = "xyz",
                            Password = "1234",
                            Phone = "+94711526501"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
